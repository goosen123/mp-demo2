<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.goosen.commons.dao.MenuMapper">

    <sql id="paramsColumns">
		a.id,
		a.code,
		a.pcode,
		a.pcodes,
		a.name,
		a.icon,
		a.url,
		a.num,
		a.levels,
		a.ismenu,
		a.tips,
		a.status,
		a.isopen,
		a.createTime,
		a.updateTime
	</sql>
	
	<select id="findByParams" resultType="map">
		SELECT 
			<include refid="paramsColumns"/>
		FROM sys_menu a
		<where>
			<if test="name != null and name != ''">
				AND a.name LIKE CONCAT('%', #{productTitle}, '%')
			</if>
			<if test="pcodes != null and pcodes != ''">
				AND a.pcodes LIKE CONCAT('%[', #{pcodes}, ']%')
			</if> 
			<if test="id != null and id != ''">
				AND a.id  = #{id}
			</if>
			<if test="ids != null and ids.size > 0">
		        AND a.id IN
		        <foreach collection="ids" item="idItem" index="index" open="(" close=")" separator=",">
		            #{idItem}
		        </foreach>
		    </if>
			<if test="code != null and code != ''">
				AND a.code  = #{code}
			</if>
		</where>
	</select>
	
	<select id="getMenusByRoleIds" resultType="com.goosen.commons.node.MenuNode">
        SELECT
        m1.id AS id,
        m1.icon AS icon,
        (
        CASE
        WHEN (m2.id = '0' OR m2.id IS NULL) THEN
        0
        ELSE
        m2.id
        END
        ) AS parentId,
        m1.NAME as name,
        m1.url as url,
        m1.levels as levels,
        m1.ismenu as ismenu,
        m1.num as num
        FROM
        sys_menu m1
        LEFT JOIN sys_menu m2 ON m1.pcode = m2. CODE
        INNER JOIN (
        SELECT
        ID
        FROM
        sys_menu
        WHERE
        ID IN (
        SELECT
        menuId
        FROM
        sys_role_menu rela
        WHERE
        rela.roleId IN
        <foreach collection="list" index="index" item="i" open="(" separator="," close=")">
            #{i}
        </foreach>
        )
        ) m3 ON m1.id = m3.id
        where m1.ismenu = 1
        order by levels,num asc
    </select>
    
    <select id="getMenuIdsByRoleId" resultType="String">
        select menuId from
        sys_role_menu where roleId = #{roleId}
    </select>
    
    <select id="menuTreeList" resultType="com.goosen.commons.node.ZTreeNode">
        SELECT
        m1.id AS id,
        (
        CASE
        WHEN (m2.id = 0 OR m2.id IS NULL) THEN
        0
        ELSE
        m2.id
        END
        ) AS pId,
        m1. NAME
        AS NAME,
        (
        CASE
        WHEN (m2.id = 0 OR m2.id IS NULL) THEN
        'true'
        ELSE
        'false'
        END
        ) as isOpen
        FROM
        sys_menu m1
        LEFT JOIN sys_menu m2 ON m1.pcode = m2. CODE
        ORDER BY
        m1.id ASC
    </select>

    <select id="menuTreeListByMenuIds" resultType="com.goosen.commons.node.ZTreeNode">
        SELECT
        m1.id AS id,
        (
        CASE
        WHEN (m2.id = 0 OR m2.id IS NULL) THEN
        0
        ELSE
        m2.id
        END
        ) AS pId,
        m1. NAME AS NAME,
        (
        CASE
        WHEN (m2.id = 0 OR m2.id IS
        NULL) THEN
        'true'
        ELSE
        'false'
        END
        ) as isOpen,
        (
        CASE
        WHEN (m3.ID = 0 OR m3.ID
        IS NULL) THEN
        'false'
        ELSE
        'true'
        END
        ) "checked"
        FROM
        sys_menu m1
        LEFT JOIN
        sys_menu m2
        ON m1.pcode = m2. CODE
        left join (
        SELECT
        ID
        FROM
        sys_menu
        WHERE
        ID IN
        <foreach collection="list" index="index" item="i" open="(" separator="," close=")">
            #{i}
        </foreach>
        ) m3 on m1.id = m3.id
        ORDER BY
        m1.id ASC
    </select>
	
</mapper>